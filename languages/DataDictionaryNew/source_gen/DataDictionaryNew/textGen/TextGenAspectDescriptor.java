package DataDictionaryNew.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.Arrays;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.text.TextUnit;
import jetbrains.mps.text.impl.BufferLayoutBuilder;
import jetbrains.mps.text.impl.RegularTextUnit2;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final long[] myId2Index;
  public TextGenAspectDescriptor() {
    myId2Index = new long[8];
    myId2Index[0] = 0x4709666cc5e0197fL;
    myId2Index[1] = 0x4709666cc5e01982L;
    myId2Index[2] = 0x5c982cbd675b3b19L;
    myId2Index[3] = 0x62cd8899af6d0933L;
    myId2Index[4] = 0x62cd8899af6d0936L;
    myId2Index[5] = 0x62cd8899af7681e1L;
    myId2Index[6] = 0x62cd8899af76826bL;
    myId2Index[7] = 0x62cd8899af7682beL;
  }
  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SConceptId id) {
    final int index = Arrays.binarySearch(myId2Index, id.getIdValue());
    switch (index) {
      case 0:
        return new PredefinedDomain_TextGen();
      case 1:
        return new UserDefinedDomain_TextGen();
      case 2:
        return new AggregationAsAField_TextGen();
      case 3:
        return new DataDictionary_TextGen();
      case 4:
        return new Aggregation_TextGen();
      case 5:
        return new SetOfComponentsAsAField_TextGen();
      case 6:
        return new ExclusiveSpecializationAsField_TextGen();
      case 7:
        return new NonExclusiveSpecializationAsField_TextGen();
      default:
        return null;
    }
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(MetaAdapterFactory.getConcept(0xe00ab26049b415aL, 0x83b6dc09f3615dc4L, 0x62cd8899af6d0933L, "DataDictionaryNew.structure.DataDictionary"))) {
        String fname = getFileName_DataDictionary(root);
        String ext = getFileExtension_DataDictionary(root);
        outline.registerTextUnit(createTextUnit0((ext == null ? fname : (fname + '.' + ext)), root));
        continue;
      }
    }
  }
  private static String getFileName_DataDictionary(SNode node) {
    return node.getName();
  }
  private static String getFileExtension_DataDictionary(SNode node) {
    return "java";
  }
  private static TextUnit createTextUnit0(String filename, SNode node) {
    BufferLayoutBuilder lb = new BufferLayoutBuilder();
    lb.add("PACKAGE");
    lb.add("CLASS");
    lb.activate("PACKAGE");
    RegularTextUnit2 rv = new RegularTextUnit2(node, filename, null);
    rv.setBufferLayout(lb.create());
    return rv;
  }
}
